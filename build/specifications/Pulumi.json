{
  "$schema": "https://raw.githubusercontent.com/nuke-build/nuke/master/source/Nuke.CodeGeneration/schema.json",
  "references": [
    "https://www.pulumi.com/docs/reference/cli/"
  ],
  "name": "Pulumi",
  "officialUrl": "https://www.pulumi.com/",
  "help": "Pulumi is controlled primarily using the command line interface (CLI). It works in conjunction with the Pulumi service to deploy changes to your cloud apps and infrastructure. It keeps a history of who updated what in your team and when. This CLI has been designed for great inner loop productivity, in addition to continuous integration and delivery scenarios.",
  "pathExecutable": "pulumi",
  "tasks": [
    {
      "help": "Show a preview of updates to a stacks resources",
      "postfix": "Preview",
      "definiteArgument": "preview",
      "settingsClass": {
        "properties": [
          {
            "name": "Config",
            "type": "List<string>",
            "format": "--config {value}",
            "help": "Config to use during the preview"
          }
        ]
      }
    },
    {
      "help": "Show a stacks output properties",
      "postfix": "StackOutput",
      "definiteArgument": "stack output",
      "settingsClass": {
        "properties": [
          {
            "name": "PropertyName",
            "type": "string",
            "format": "{value}",
            "help": "Show value of specific property"
          },
          {
            "name": "Json",
            "type": "bool",
            "format": "--json"
          }
        ]
      }
    }
  ],
  "commonTaskProperties": [
    {
      "name": "Color",
      "type": "ColorizeOutput",
      "format": "--color {value}",
      "help": "Colorize output. Choices are: always, never, raw, auto (default is auto)"
    },
    {
      "name": "Cwd",
      "type": "string",
      "format": "--cwd {value}",
      "help": "Run pulumi as if it had been started in another directory"
    },
    {
      "name": "DisableIntegrityChecking",
      "type": "bool",
      "format": "--disable-integrity-checking",
      "help": "Disable integrity checking of checkpoint files"
    },
    {
      "name": "Emoji",
      "type": "bool",
      "format": "--emoji",
      "help": "Enable emojis in the output (default is true)"
    },
    {
      "name": "Help",
      "type": "bool",
      "format": "--help",
      "help": "Help for Pulumi"
    },
    {
      "name": "LogFlow",
      "type": "bool",
      "format": "--logflow",
      "help": "Flow log settings to child processes (like plugins)"
    },
    {
      "name": "LogToStderr",
      "type": "bool",
      "format": "--logtostderr",
      "help": "Log to stderr instead of to files"
    },
    {
      "name": "NonInteractive",
      "type": "bool",
      "format": "--non-interactive",
      "help": "Disable interactive mode for all commands"
    },
    {
      "name": "Profiling",
      "type": "string",
      "format": "--profiling {value}",
      "help": "Emit CPU and memory profiles and an execution trace to '[filename].[pid].{cpu,mem,trace}', respectively"
    },
    {
      "name": "Tracing",
      "type": "string",
      "format": "--tracing {value}",
      "help": "Emit tracing to the specified endpoint. Use the file: scheme to write tracing data to a local file"
    },
    {
      "name": "Verbose",
      "type": "int",
      "format": "--verbose {value}",
      "help": "Enable verbose logging (e.g., v=3); anything >3 is very verbose"
    }
  ],
  "enumerations": [
    {
      "name": "ColorizeOutput",
      "values": [
        "always",
        "never",
        "raw",
        "auto"
      ]
    }
  ]
}